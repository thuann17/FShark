CREATE DATABASE FShark;

GO
USE FShark;
GO

CREATE TABLE TYPES (
    ID INT IDENTITY PRIMARY KEY,
    TYLE NVARCHAR(100)
);

CREATE TABLE FRIENDSTATUS (
    ID INT IDENTITY PRIMARY KEY,
    STATUS NVARCHAR(100)
);

CREATE TABLE IMAGES (
    ID INT IDENTITY PRIMARY KEY,
    IMAGE VARCHAR(500)
);

CREATE TABLE USERROLES (
    ID INT IDENTITY PRIMARY KEY,
    ROLE NVARCHAR(100)
);

CREATE TABLE USERS (
    USERNAME VARCHAR(200) PRIMARY KEY,
    ROLES INT,
	PASSWORD VARCHAR(30),
    ACTIVE BIT,
    EMAIL VARCHAR(200),
    GENDER BIT,
    LASTNAME NVARCHAR(100),
    FIRSTNAME NVARCHAR(100),
    BIRTHDAY DATE,
    BIO  NVARCHAR(500),
    HOMETOWN NVARCHAR(200),
	CURRENCY NVARCHAR(100),
    AVATAR INT,
    COVER INT,
	FOREIGN KEY (ROLES) REFERENCES USERROLES(ID),
    FOREIGN KEY (AVATAR) REFERENCES IMAGES(ID),
    FOREIGN KEY (COVER) REFERENCES IMAGES(ID)
);

CREATE TABLE POSTS (
    ID INT IDENTITY PRIMARY KEY,
    USERNAME VARCHAR(200),
    CONTENT NVARCHAR(200),
    CREATEDATE DATETIME,
    FOREIGN KEY (USERNAME) REFERENCES USERS(USERNAME)
);

CREATE TABLE COMMENTS (
    ID INT IDENTITY PRIMARY KEY,
	CONTENT NVARCHAR(500),
    USERNAME VARCHAR(200),
    POST INT,
    IMAGE INT,
    FOREIGN KEY (USERNAME) REFERENCES USERS(USERNAME),
    FOREIGN KEY (POST) REFERENCES POSTS(ID),
    FOREIGN KEY (IMAGE) REFERENCES IMAGES(ID)
);

CREATE TABLE FRIENDREQUESTS (
    ID INT IDENTITY PRIMARY KEY,
    SENDER VARCHAR(200),
    USERSRC VARCHAR(200),
    CREATEDATE DATETIME,
    STATUS INT,
    FOREIGN KEY (SENDER) REFERENCES USERS(USERNAME),
    FOREIGN KEY (USERSRC) REFERENCES USERS(USERNAME),
    FOREIGN KEY (STATUS) REFERENCES FRIENDSTATUS(ID)
);

CREATE TABLE FRIENDS (
    ID INT IDENTITY PRIMARY KEY,
    USER_TARGET VARCHAR(200),
    USER_SRC VARCHAR(200),
    CREATEDATE DATETIME,
    FOREIGN KEY (USER_TARGET) REFERENCES USERS(USERNAME),
    FOREIGN KEY (USER_SRC) REFERENCES USERS(USERNAME)
);

CREATE TABLE LIKES (
    ID INT IDENTITY PRIMARY KEY,
    USERNAME VARCHAR(200),
    POST INT,
    COMMENT INT,
    CREATEDATE DATETIME,
    FOREIGN KEY (USERNAME) REFERENCES USERS(USERNAME),
    FOREIGN KEY (POST) REFERENCES POSTS(ID),
    FOREIGN KEY (COMMENT) REFERENCES COMMENTS(ID)
);

CREATE TABLE TRIPS (
    ID INT IDENTITY PRIMARY KEY,
    TRIPNAME NVARCHAR(500),
    STARTDATE DATE,
    ENDDATE DATE,
    CREATEDATE DATETIME,
    DESCRIPTION TEXT
);

CREATE TABLE TRIPROLES (
    ID INT IDENTITY PRIMARY KEY,
    ROLE NVARCHAR(100)
);

CREATE TABLE USERTRIPS (
    ID INT IDENTITY PRIMARY KEY,
    TRIPID INT,
    USERID VARCHAR(200),
    ROLE INT,
    FOREIGN KEY (TRIPID) REFERENCES TRIPS(ID),
    FOREIGN KEY (USERID) REFERENCES USERS(USERNAME),
    FOREIGN KEY (ROLE) REFERENCES TRIPROLES(ID)
);

CREATE TABLE NOTIFICATIONS (
    ID INT IDENTITY PRIMARY KEY,
    USERNAME VARCHAR(200),
    CONTENT NVARCHAR(500),
    TYPE INT,
    POST INT,
    STATUS BIT,
    CREATEDATE DATETIME,
    FOREIGN KEY (USERNAME) REFERENCES USERS(USERNAME),
    FOREIGN KEY (TYPE) REFERENCES TYPES(ID),
    FOREIGN KEY (POST) REFERENCES POSTS(ID)
);

CREATE TABLE SHARES (
    ID INT IDENTITY PRIMARY KEY,
    USERNAME VARCHAR(200),
    POST INT,
    CONTENT NVARCHAR(500),
    CREATEDATE DATETIME,
    FOREIGN KEY (USERNAME) REFERENCES USERS(USERNAME),
    FOREIGN KEY (POST) REFERENCES POSTS(ID)
);

CREATE TABLE CONVERSATIONS (
    ID INT IDENTITY PRIMARY KEY,
    NAME NVARCHAR(300),
    CREATEDAT DATETIME,
    AVATAR INT,
    FOREIGN KEY (AVATAR) REFERENCES IMAGES(ID)
);

CREATE TABLE GROUPMEMBERS (
    ID INT IDENTITY PRIMARY KEY,
    CONVERSATION INT,
    USERNAME VARCHAR(200),
    TIMEJOIN DATETIME,
    FOREIGN KEY (CONVERSATION) REFERENCES CONVERSATIONS(ID),
    FOREIGN KEY (USERNAME) REFERENCES USERS(USERNAME)
);

CREATE TABLE MESSAGES (
    ID INT IDENTITY PRIMARY KEY,
    CONVERSATION INT,
    USERSRC VARCHAR(200),
    CONTENT NVARCHAR(500),
    CREATEDATE DATETIME,
    FOREIGN KEY (CONVERSATION) REFERENCES CONVERSATIONS(ID),
    FOREIGN KEY (USERSRC) REFERENCES USERS(USERNAME)
);

CREATE TABLE POSTIMAGES (
    ID INT IDENTITY PRIMARY KEY,
    POSTID INT,
    IMAGE INT,
    FOREIGN KEY (POSTID) REFERENCES POSTS(ID),
    FOREIGN KEY (IMAGE) REFERENCES IMAGES(ID)
);

CREATE TABLE CMTIMAGE (
    ID INT IDENTITY PRIMARY KEY,
    CMTID INT,
    IMAGE INT,
    FOREIGN KEY (CMTID) REFERENCES COMMENTS(ID),
    FOREIGN KEY (IMAGE) REFERENCES IMAGES(ID)
);

CREATE TABLE PLACES (
    ID INT IDENTITY PRIMARY KEY,
    NAMEPLACE NVARCHAR(500),
    LONGITUDE VARCHAR(100),
    LATITUDE VARCHAR(100),
    URLMAP VARCHAR(1000),
    ADDRESS NVARCHAR(1000),
    DESCRIPTION NVARCHAR(1000)
);

CREATE TABLE PLACETRIPS (
    ID INT IDENTITY PRIMARY KEY,
    PLACEID INT,
    TRIPID INT,
    DATETIME DATETIME,
    NOTE NVARCHAR(500),
    FOREIGN KEY (PLACEID) REFERENCES PLACES(ID),
    FOREIGN KEY (TRIPID) REFERENCES TRIPS(ID)
);

CREATE TABLE PLACEIMAGES (
    ID INT PRIMARY KEY,
    PLACEID INT,
    IMAGE INT,
    FOREIGN KEY (PLACEID) REFERENCES PLACES(ID),
    FOREIGN KEY (IMAGE) REFERENCES IMAGES(ID)
);

